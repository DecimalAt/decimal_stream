/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AttestationVerifier,
  AttestationVerifierInterface,
} from "../../../../contracts/JobManager/Mock.sol/AttestationVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isValidSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638e760afe14610046578063b9209e3314610071578063d5f5058214610093575b600080fd5b61005c6100543660046100f6565b600192915050565b60405190151581526020015b60405180910390f35b61008561007f366004610168565b50600090565b604051908152602001610068565b61005c6100a1366004610168565b60006001600160a01b0382166100ee5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21029b4b3b732b960911b604482015260640160405180910390fd5b506001919050565b6000806020838503121561010957600080fd5b823567ffffffffffffffff8082111561012157600080fd5b818501915085601f83011261013557600080fd5b81358181111561014457600080fd5b86602082850101111561015657600080fd5b60209290920196919550909350505050565b60006020828403121561017a57600080fd5b81356001600160a01b038116811461019157600080fd5b939250505056fea26469706673582212205553c1bb28f5c4f554071bdcdec395889a6e221caa866f966493e81738499aba64736f6c63430008140033";

type AttestationVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationVerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationVerifier__factory extends ContractFactory {
  constructor(...args: AttestationVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AttestationVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): AttestationVerifier__factory {
    return super.connect(runner) as AttestationVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationVerifierInterface {
    return new Interface(_abi) as AttestationVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): AttestationVerifier {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as AttestationVerifier;
  }
}
